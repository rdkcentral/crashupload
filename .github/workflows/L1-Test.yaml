name: L1 Testing & Coverage

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test-and-coverage:
    name: Test & Coverage
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rdkcentral/docker-device-mgt-service-test/native-platform:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust Toolchain components
      run: |
        if ! command -v cargo &> /dev/null; then
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          export PATH="$HOME/.cargo/bin:$PATH"
        fi
        rustup update stable
        rustup default stable
        rustup component add llvm-tools-preview

    - name: Add Rust to PATH
      run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov

    - name: Install additional dependencies
      run: |
        apt-get update && apt-get install -y git pkg-config libssl-dev || true

    - name: Run all tests
      run: cargo test --all-features --workspace --verbose

    - name: Run tests with llvm-cov for coverage
      run: |
        mkdir -p ./coverage
        # Generate both XML and summary report
        cargo llvm-cov --all-features --workspace --cobertura --output-path ./coverage/cobertura.xml
        # Print coverage summary to console
        cargo llvm-cov --all-features --workspace --summary-only

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage/cobertura.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false

    # - name: Archive code coverage results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: code-coverage-report
    #     path: coverage/

    - name: Clean target directory (ensure it's not persisted)
      run: rm -rf target/
